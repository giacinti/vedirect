substitutions:
  device_name: vedirect
  mqtt_prefix: "vedirect/"
  ve_serial: "XXXXXXXXXXX/"
  gateway_ip: 192.168.x.y
  device_ip: 192.168.x.z
  mqtt_broker: 192.168.x.t

esphome:
  name: ${device_name}
  platform: ESP8266
  board: nodemcuv2
  includes:
    - vedirect/vedirect.h
    - vedirect/vedirect.cpp
    - vedirect/VeDirectFrameHandler.h
    - vedirect/VeDirectFrameHandler.cpp


wifi:
  ssid: !secret my_ssid
  password: !secret my_pwd
  manual_ip:
    static_ip: ${device_ip}
    gateway: ${gateway_ip}
    subnet: 255.255.255.0
    dns1: ${gateway_ip}
  use_address: ${device_ip}


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "XXX Fallback Hotspot"
    password: "XXX"

captive_portal:

# Enable logging
logger:
  hardware_uart: UART0_SWAP
  level: DEBUG

# Enable Home Assistant API - just for debug
api:
  reboot_timeout: 0s

ota:

mqtt:
  id: mqtt_client
  broker: ${mqtt_broker}
  discovery: False
  log_topic:
    topic: none
    level: NONE
  birth_message:
  will_message:
  shutdown_message:

uart:
  id: uart_bus
  tx_pin: 1
  rx_pin: 3
  baud_rate: 19200
  data_bits: 8
  parity: NONE
  stop_bits: 1

sensor:
  - platform: template
    id: sensor_V
    name: "V"
    unit_of_measurement: "V"
    accuracy_decimals: 3
    state_topic: ${mqtt_prefix}${ve_serial}V
    retain: False
    availability:
    filters:
      - multiply: 0.001
  - platform: template
    id: sensor_VPV
    name: "VPV"
    unit_of_measurement: "V"
    accuracy_decimals: 3
    state_topic: ${mqtt_prefix}${ve_serial}VPV
    retain: False
    availability:
    filters:
      - multiply: 0.001
  - platform: template
    id: sensor_PPV
    name: "PPV"
    unit_of_measurement: "W"
    state_topic: ${mqtt_prefix}${ve_serial}PPV
    retain: False
    availability:
  - platform: template
    id: sensor_I
    name: "I"
    unit_of_measurement: "A"
    accuracy_decimals: 3
    state_topic: ${mqtt_prefix}${ve_serial}I
    retain: False
    availability:
    filters:
      - multiply: 0.001    
  - platform: template
    id: sensor_IL
    name: "IL"
    unit_of_measurement: "A"
    accuracy_decimals: 3
    state_topic: ${mqtt_prefix}${ve_serial}IL
    retain: False
    availability:
    filters:
      - multiply: 0.001    
  - platform: template
    id: sensor_H19
    name: "H19"
    unit_of_measurement: "Wh"
    state_topic: ${mqtt_prefix}${ve_serial}H19
    retain: False
    availability:
    filters:
      - multiply: 10
  - platform: template
    id: sensor_H20
    name: "H20"
    unit_of_measurement: "Wh"
    state_topic: ${mqtt_prefix}${ve_serial}H20
    retain: False
    availability:
    filters:
      - multiply: 10
  - platform: template
    id: sensor_H22
    name: "H22"
    unit_of_measurement: "Wh"
    state_topic: ${mqtt_prefix}${ve_serial}H22
    retain: False
    availability:
    filters:
      - multiply: 10
  - platform: template
    id: sensor_H21
    name: "H21"
    unit_of_measurement: "W"
    state_topic: ${mqtt_prefix}${ve_serial}H21
    retain: False
    availability:
  - platform: template
    id: sensor_H23
    name: "H23"
    unit_of_measurement: "W"
    state_topic: ${mqtt_prefix}${ve_serial}H23
    retain: False
    availability:
      
text_sensor:
  - platform: template
    id: sensor_PID
    name: "PID"
    state_topic: ${mqtt_prefix}${ve_serial}PID
    retain: False
    availability:
  - platform: template
    id: sensor_FW
    name: "FW"
    state_topic: ${mqtt_prefix}${ve_serial}FW
    retain: False
    availability:
  - platform: template
    id: sensor_SER
    name: "SER"
    state_topic: ${mqtt_prefix}${ve_serial}SER
    retain: False
    availability:    
  - platform: template
    id: sensor_LOAD
    name: "LOAD"
    state_topic: ${mqtt_prefix}${ve_serial}LOAD
    retain: False
    availability:
  - platform: template
    id: sensor_ERR
    name: "ERR"
    state_topic: ${mqtt_prefix}${ve_serial}ERR
    retain: False
    availability:
  - platform: template
    id: sensor_CS
    name: "CS"
    state_topic: ${mqtt_prefix}${ve_serial}CS
    retain: False
    availability:
  - platform: template
    id: sensor_MPPT
    name: "MPPT"
    state_topic: ${mqtt_prefix}${ve_serial}MPPT
    retain: False
    availability:    
  - platform: template
    id: sensor_HEX
    name: "HEX"
    state_topic: ${mqtt_prefix}${ve_serial}HEX
    retain: False
    availability:    

custom_component:
  - lambda: |-
      auto vedirect = new VEDirectComponent(id(uart_bus));
      vedirect->addSensor("PID",id(sensor_PID));
      vedirect->addSensor("FW",id(sensor_FW));
      vedirect->addSensor("SER#",id(sensor_SER));
      vedirect->addSensor("V",id(sensor_V));
      vedirect->addSensor("VPV",id(sensor_VPV));
      vedirect->addSensor("PPV",id(sensor_PPV));
      vedirect->addSensor("I",id(sensor_I));
      vedirect->addSensor("IL",id(sensor_IL));
      vedirect->addSensor("LOAD",id(sensor_LOAD));
      vedirect->addSensor("H19",id(sensor_H19));
      vedirect->addSensor("H20",id(sensor_H20));
      vedirect->addSensor("H21",id(sensor_H21));
      vedirect->addSensor("H22",id(sensor_H22));
      vedirect->addSensor("H23",id(sensor_H23));
      vedirect->addSensor("ERR",id(sensor_ERR));
      vedirect->addSensor("CS",id(sensor_CS));
      vedirect->addSensor("MPPT",id(sensor_MPPT));
      vedirect->addSensor("HEX",id(sensor_HEX));
      vedirect->muteAsyncMessage(true);
      vedirect->set_update_interval(60000);
      
      id(mqtt_client).subscribe("${mqtt_prefix}${ve_serial}HexCommand", 
      [=](const std::string& topic, const std::string &payload) {
        vedirect->sendHexCommand(payload.c_str());
      });
      
      id(mqtt_client).subscribe("${mqtt_prefix}${ve_serial}AsyncMute", 
      [=](const std::string& topic, const std::string &payload) {
        vedirect->muteAsyncMessage((payload=="true")?true:false);
      });
      
      return {vedirect};
